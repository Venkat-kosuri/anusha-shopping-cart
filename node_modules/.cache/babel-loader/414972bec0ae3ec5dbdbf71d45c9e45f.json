{"ast":null,"code":"import { effect, array, iterator, promise, task } from '@redux-saga/is';\nimport { effectTypes } from 'redux-saga/effects';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nvar PENDING = 'PENDING';\nvar RESOLVED = 'RESOLVED';\nvar REJECTED = 'REJECTED';\nvar CANCELLED = 'CANCELLED';\nvar IS_BROWSER = typeof window !== 'undefined' && window.document;\nvar IS_REACT_NATIVE = typeof navigator !== 'undefined' && navigator.product === 'ReactNative';\n\nvar isRaceEffect = function isRaceEffect(eff) {\n  return effect(eff) && eff.type === effectTypes.RACE;\n};\n/* eslint-disable no-console */\n// Poor man's `console.group` and `console.groupEnd` for Node.\n// Can be overridden by the `console-group` polyfill.\n// The poor man's groups look nice, too, so whether to use\n// the polyfilled methods or the hand-made ones can be made a preference.\n\n\nvar groupPrefix = '';\nvar GROUP_SHIFT = '   ';\nvar GROUP_ARROW = 'â–¼';\n\nfunction consoleGroup() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (console.group) {\n    var _console;\n\n    (_console = console).group.apply(_console, args);\n  } else {\n    var _console2;\n\n    console.log('');\n\n    (_console2 = console).log.apply(_console2, [groupPrefix + GROUP_ARROW].concat(args));\n\n    groupPrefix += GROUP_SHIFT;\n  }\n}\n\nfunction consoleGroupEnd() {\n  if (console.groupEnd) {\n    console.groupEnd();\n  } else {\n    groupPrefix = groupPrefix.substr(0, groupPrefix.length - GROUP_SHIFT.length);\n  }\n}\n\nfunction argToString(arg) {\n  return typeof arg === 'function' ? \"\" + arg.name : typeof arg === 'string' ? \"'\" + arg + \"'\" : arg;\n}\n\nfunction isPrimitive(val) {\n  return typeof val === 'string' || typeof val === 'number' || typeof val === 'boolean' || typeof val === 'symbol' || val === null || val === undefined;\n}\n\nvar Formatter = /*#__PURE__*/function () {\n  function Formatter() {\n    this.logs = [];\n    this.suffix = [];\n  }\n\n  var _proto = Formatter.prototype;\n\n  _proto.add = function add(msg) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    } // Remove the `%c` CSS styling that is not supported by the Node console.\n\n\n    if (!IS_BROWSER && typeof msg === 'string') {\n      var prevMsg = msg;\n      msg = msg.replace(/^%c\\s*/, '');\n\n      if (msg !== prevMsg) {\n        // Remove the first argument which is the CSS style string.\n        args.shift();\n      }\n    }\n\n    this.logs.push({\n      msg: msg,\n      args: args\n    });\n    return this;\n  };\n\n  _proto.appendData = function appendData() {\n    var _this$suffix;\n\n    (_this$suffix = this.suffix).push.apply(_this$suffix, arguments);\n\n    return this;\n  };\n\n  _proto.addValue = function addValue(value) {\n    if (isPrimitive(value)) {\n      this.add(value);\n    } else {\n      // The browser console supports `%O`, the Node console does not.\n      if (IS_BROWSER) {\n        this.add('%O', value);\n      } else {\n        this.add('%s', require('util').inspect(value));\n      }\n    }\n\n    return this;\n  };\n\n  _proto.addCall = function addCall(name, args) {\n    var _this = this;\n\n    if (!args.length) {\n      this.add(name + \"()\");\n    } else {\n      this.add(name);\n      this.add('(');\n      args.forEach(function (arg, i) {\n        _this.addValue(argToString(arg));\n\n        _this.addValue(i === args.length - 1 ? ')' : ', ');\n      });\n    }\n\n    return this;\n  };\n\n  _proto.getLog = function getLog() {\n    var msgs = [];\n    var msgsArgs = [];\n\n    for (var _iterator = this.logs, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var _ref2 = _ref,\n          msg = _ref2.msg,\n          args = _ref2.args;\n      msgs.push(msg);\n      msgsArgs.push.apply(msgsArgs, args);\n    }\n\n    return [msgs.join('')].concat(msgsArgs, this.suffix);\n  };\n\n  return Formatter;\n}();\n\nvar DEFAULT_STYLE = 'color: black';\nvar LABEL_STYLE = 'font-weight: bold';\nvar EFFECT_TYPE_STYLE = 'color: blue';\nvar ERROR_STYLE = 'color: red';\nvar CANCEL_STYLE = 'color: #ccc';\n\nvar DescriptorFormatter = /*#__PURE__*/function (_Formatter) {\n  _inheritsLoose(DescriptorFormatter, _Formatter);\n\n  function DescriptorFormatter(isCancel, isError) {\n    var _this;\n\n    _this = _Formatter.call(this) || this;\n    _this.logMethod = isError ? 'error' : 'log';\n\n    _this.styleOverride = function (s) {\n      return isCancel ? CANCEL_STYLE : isError ? ERROR_STYLE : s;\n    };\n\n    return _this;\n  }\n\n  var _proto = DescriptorFormatter.prototype;\n\n  _proto.resetStyle = function resetStyle() {\n    return this.add('%c', this.styleOverride(DEFAULT_STYLE));\n  };\n\n  _proto.addLabel = function addLabel(text) {\n    if (text) {\n      return this.add(\"%c \" + text + \" \", this.styleOverride(LABEL_STYLE));\n    } else {\n      return this;\n    }\n  };\n\n  _proto.addEffectType = function addEffectType(text) {\n    return this.add(\"%c \" + text + \" \", this.styleOverride(EFFECT_TYPE_STYLE));\n  };\n\n  _proto.addDescResult = function addDescResult(descriptor, ignoreResult) {\n    var status = descriptor.status,\n        result = descriptor.result,\n        error = descriptor.error,\n        duration = descriptor.duration;\n\n    if (status === RESOLVED && !ignoreResult) {\n      if (array(result)) {\n        this.addValue(' ðŸ¡² ');\n        this.addValue(result);\n      } else {\n        this.appendData('ðŸ¡²', result);\n      }\n    } else if (status === REJECTED) {\n      this.appendData('ðŸ¡² âš ', error);\n    } else if (status === PENDING) {\n      this.appendData('âŒ›');\n    } else if (status === CANCELLED) {\n      this.appendData('ðŸ¡² Cancelled!');\n    }\n\n    if (status !== PENDING) {\n      this.appendData(\"(\" + duration.toFixed(2) + \"ms)\");\n    }\n\n    return this;\n  };\n\n  return DescriptorFormatter;\n}(Formatter);\n/* eslint-disable no-console */\n\n\nfunction logSaga(manager) {\n  if (manager.getRootIds().length === 0) {\n    console.log('Saga monitor: No effects to log');\n  }\n\n  console.log('');\n  console.log('Saga monitor:', Date.now(), new Date().toISOString());\n\n  for (var _iterator = manager.getRootIds(), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var id = _ref;\n    logEffectTree(manager, id);\n  }\n\n  console.log('');\n}\n\nfunction logEffectTree(manager, effectId) {\n  var desc = manager.get(effectId);\n  var childIds = manager.getChildIds(effectId);\n  var formatter = getFormatterFromDescriptor(desc);\n\n  if (childIds.length === 0) {\n    var _console;\n\n    (_console = console)[formatter.logMethod].apply(_console, formatter.getLog());\n  } else {\n    consoleGroup.apply(void 0, formatter.getLog());\n\n    for (var _iterator2 = childIds, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var id = _ref2;\n      logEffectTree(manager, id);\n    }\n\n    consoleGroupEnd();\n  }\n}\n\nfunction getFormatterFromDescriptor(desc) {\n  var isCancel = desc.status === CANCELLED;\n  var isError = desc.status === REJECTED;\n  var formatter = new DescriptorFormatter(isCancel, isError);\n  var winnerInd = desc.winner ? isError ? 'âœ˜' : 'âœ“' : '';\n  formatter.addLabel(winnerInd).addLabel(desc.label);\n\n  if (desc.root) {\n    formatter.addEffectType('root').resetStyle().addCall(desc.saga.name, desc.args).addDescResult(desc);\n  } else if (iterator(desc.effect)) {\n    formatter.addValue(desc.effect.name).addDescResult(desc, true);\n  } else if (promise(desc.effect)) {\n    formatter.addEffectType('promise').resetStyle().addDescResult(desc);\n  } else if (effect(desc.effect)) {\n    var _desc$effect = desc.effect,\n        type = _desc$effect.type,\n        payload = _desc$effect.payload;\n\n    if (type === effectTypes.TAKE) {\n      formatter.addEffectType('take').resetStyle().addValue(payload.channel == null ? payload.pattern : payload).addDescResult(desc);\n    } else if (type === effectTypes.PUT) {\n      formatter.addEffectType('put').resetStyle().addDescResult(Object.assign({}, desc, {\n        result: payload\n      }));\n    } else if (type === effectTypes.ALL) {\n      formatter.addEffectType('all').resetStyle().addDescResult(desc, true);\n    } else if (type === effectTypes.RACE) {\n      formatter.addEffectType('race').resetStyle().addDescResult(desc, true);\n    } else if (type === effectTypes.CALL) {\n      formatter.addEffectType('call').resetStyle().addCall(payload.fn.name, payload.args).addDescResult(desc);\n    } else if (type === effectTypes.CPS) {\n      formatter.addEffectType('cps').resetStyle().addCall(payload.fn.name, payload.args).addDescResult(desc);\n    } else if (type === effectTypes.FORK) {\n      formatter.addEffectType(payload.detached ? 'spawn' : 'fork').resetStyle().addCall(payload.fn.name, payload.args).addDescResult(desc);\n    } else if (type === effectTypes.JOIN) {\n      formatter.addEffectType('join').resetStyle().addDescResult(desc);\n    } else if (type === effectTypes.CANCEL) {\n      formatter.addEffectType('cancel').resetStyle().appendData(payload.name);\n    } else if (type === effectTypes.SELECT) {\n      formatter.addEffectType('select').resetStyle().addCall(payload.selector.name, payload.args).addDescResult(desc);\n    } else if (type === effectTypes.ACTION_CHANNEL) {\n      formatter.addEffectType('actionChannel').resetStyle().addValue(payload.buffer == null ? payload.pattern : payload).addDescResult(desc);\n    } else if (type === effectTypes.CANCELLED) {\n      formatter.addEffectType('cancelled').resetStyle().addDescResult(desc);\n    } else if (type === effectTypes.FLUSH) {\n      formatter.addEffectType('flush').resetStyle().addValue(payload).addDescResult(desc);\n    } else if (type === effectTypes.GET_CONTEXT) {\n      formatter.addEffectType('getContext').resetStyle().addValue(payload).addDescResult(desc);\n    } else if (type === effectTypes.SET_CONTEXT) {\n      formatter.addEffectType('setContext').resetStyle().addValue(payload).addDescResult(desc, true);\n    } else {\n      throw new Error(\"Invalid effect type \" + type);\n    }\n  } else {\n    formatter.addEffectType('unknown').resetStyle().addDescResult(desc);\n  }\n\n  return formatter;\n}\n/** The manager is used for bookkeeping all the effect descriptors */\n\n\nvar Manager = /*#__PURE__*/function () {\n  function Manager() {\n    this.rootIds = []; // effect-id-to-effect-descriptor\n\n    this.map = {}; // effect-id-to-array-of-child-id\n\n    this.childIdsMap = {};\n  }\n\n  var _proto = Manager.prototype;\n\n  _proto.get = function get(effectId) {\n    return this.map[effectId];\n  };\n\n  _proto.set = function set(effectId, desc) {\n    this.map[effectId] = desc;\n\n    if (this.childIdsMap[desc.parentEffectId] == null) {\n      this.childIdsMap[desc.parentEffectId] = [];\n    }\n\n    this.childIdsMap[desc.parentEffectId].push(effectId);\n  };\n\n  _proto.setRootEffect = function setRootEffect(effectId, desc) {\n    this.rootIds.push(effectId);\n    this.set(effectId, Object.assign({\n      root: true\n    }, desc));\n  };\n\n  _proto.getRootIds = function getRootIds() {\n    return this.rootIds;\n  };\n\n  _proto.getChildIds = function getChildIds(parentEffectId) {\n    return this.childIdsMap[parentEffectId] || [];\n  };\n\n  return Manager;\n}();\n/* eslint-disable no-console */\n\n\nvar globalScope = IS_REACT_NATIVE ? global : IS_BROWSER ? window : null; // `VERBOSE` can be made a setting configured from the outside.\n\nfunction time() {\n  if (typeof performance !== 'undefined' && performance.now) {\n    return performance.now();\n  } else {\n    return Date.now();\n  }\n}\n\nvar manager = /*#__PURE__*/new Manager();\n\nfunction rootSagaStarted(desc) {\n  manager.setRootEffect(desc.effectId, Object.assign({}, desc, {\n    status: PENDING,\n    start: time()\n  }));\n}\n\nfunction effectTriggered(desc) {\n  manager.set(desc.effectId, Object.assign({}, desc, {\n    status: PENDING,\n    start: time()\n  }));\n}\n\nfunction effectResolved(effectId, result) {\n  resolveEffect(effectId, result);\n}\n\nfunction effectRejected(effectId, error) {\n  rejectEffect(effectId, error);\n}\n\nfunction effectCancelled(effectId) {\n  cancelEffect(effectId);\n}\n\nfunction computeEffectDur(effect) {\n  var now = time();\n  Object.assign(effect, {\n    end: now,\n    duration: now - effect.start\n  });\n}\n\nfunction resolveEffect(effectId, result) {\n  var effect = manager.get(effectId);\n\n  if (task(result)) {\n    result.toPromise().then(function (taskResult) {\n      if (result.isCancelled()) {\n        cancelEffect(effectId);\n      } else {\n        resolveEffect(effectId, taskResult);\n      }\n    }, function (taskError) {\n      return rejectEffect(effectId, taskError);\n    });\n  } else {\n    computeEffectDur(effect);\n    effect.status = RESOLVED;\n    effect.result = result;\n\n    if (isRaceEffect(effect.effect)) {\n      setRaceWinner(effectId, result);\n    }\n  }\n}\n\nfunction rejectEffect(effectId, error) {\n  var effect = manager.get(effectId);\n  computeEffectDur(effect);\n  effect.status = REJECTED;\n  effect.error = error;\n\n  if (isRaceEffect(effect.effect)) {\n    setRaceWinner(effectId, error);\n  }\n}\n\nfunction cancelEffect(effectId) {\n  var effect = manager.get(effectId);\n  computeEffectDur(effect);\n  effect.status = CANCELLED;\n}\n\nfunction setRaceWinner(raceEffectId, result) {\n  var winnerLabel = Object.keys(result)[0];\n\n  for (var _iterator = manager.getChildIds(raceEffectId), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var childId = _ref;\n    var childEffect = manager.get(childId);\n\n    if (childEffect.label === winnerLabel) {\n      childEffect.winner = true;\n    }\n  }\n} // Export the snapshot-logging function to run from the browser console or extensions.\n\n\nif (globalScope) {\n  console.log('Enter `$$LogSagas()` to print the monitor log');\n\n  globalScope.$$LogSagas = function () {\n    return logSaga(manager);\n  };\n} // Export the snapshot-logging function for arbitrary use by external code.\n\n\nvar index = {\n  rootSagaStarted: rootSagaStarted,\n  effectTriggered: effectTriggered,\n  effectResolved: effectResolved,\n  effectRejected: effectRejected,\n  effectCancelled: effectCancelled,\n  actionDispatched: function actionDispatched() {}\n};\nexport default index;\nexport { logSaga };","map":{"version":3,"sources":["C:/Users/DELL/Downloads/anusha/node_modules/@redux-saga/simple-saga-monitor/dist/redux-saga-simple-saga-monitor.esm.js"],"names":["effect","array","iterator","promise","task","effectTypes","_inheritsLoose","PENDING","RESOLVED","REJECTED","CANCELLED","IS_BROWSER","window","document","IS_REACT_NATIVE","navigator","product","isRaceEffect","eff","type","RACE","groupPrefix","GROUP_SHIFT","GROUP_ARROW","consoleGroup","_len","arguments","length","args","Array","_key","console","group","_console","apply","_console2","log","concat","consoleGroupEnd","groupEnd","substr","argToString","arg","name","isPrimitive","val","undefined","Formatter","logs","suffix","_proto","prototype","add","msg","prevMsg","replace","shift","push","appendData","_this$suffix","addValue","value","require","inspect","addCall","_this","forEach","i","getLog","msgs","msgsArgs","_iterator","_isArray","isArray","_i","Symbol","_ref","next","done","_ref2","join","DEFAULT_STYLE","LABEL_STYLE","EFFECT_TYPE_STYLE","ERROR_STYLE","CANCEL_STYLE","DescriptorFormatter","_Formatter","isCancel","isError","call","logMethod","styleOverride","s","resetStyle","addLabel","text","addEffectType","addDescResult","descriptor","ignoreResult","status","result","error","duration","toFixed","logSaga","manager","getRootIds","Date","now","toISOString","id","logEffectTree","effectId","desc","get","childIds","getChildIds","formatter","getFormatterFromDescriptor","_iterator2","_isArray2","_i2","winnerInd","winner","label","root","saga","_desc$effect","payload","TAKE","channel","pattern","PUT","Object","assign","ALL","CALL","fn","CPS","FORK","detached","JOIN","CANCEL","SELECT","selector","ACTION_CHANNEL","buffer","FLUSH","GET_CONTEXT","SET_CONTEXT","Error","Manager","rootIds","map","childIdsMap","set","parentEffectId","setRootEffect","globalScope","global","time","performance","rootSagaStarted","start","effectTriggered","effectResolved","resolveEffect","effectRejected","rejectEffect","effectCancelled","cancelEffect","computeEffectDur","end","toPromise","then","taskResult","isCancelled","taskError","setRaceWinner","raceEffectId","winnerLabel","keys","childId","childEffect","$$LogSagas","index","actionDispatched"],"mappings":"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","sourcesContent":["import { effect, array, iterator, promise, task } from '@redux-saga/is';\nimport { effectTypes } from 'redux-saga/effects';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\n\nvar PENDING = 'PENDING';\nvar RESOLVED = 'RESOLVED';\nvar REJECTED = 'REJECTED';\nvar CANCELLED = 'CANCELLED';\nvar IS_BROWSER = typeof window !== 'undefined' && window.document;\nvar IS_REACT_NATIVE = typeof navigator !== 'undefined' && navigator.product === 'ReactNative';\n\nvar isRaceEffect = function isRaceEffect(eff) {\n  return effect(eff) && eff.type === effectTypes.RACE;\n};\n\n/* eslint-disable no-console */\n// Poor man's `console.group` and `console.groupEnd` for Node.\n// Can be overridden by the `console-group` polyfill.\n// The poor man's groups look nice, too, so whether to use\n// the polyfilled methods or the hand-made ones can be made a preference.\nvar groupPrefix = '';\nvar GROUP_SHIFT = '   ';\nvar GROUP_ARROW = 'â–¼';\nfunction consoleGroup() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (console.group) {\n    var _console;\n\n    (_console = console).group.apply(_console, args);\n  } else {\n    var _console2;\n\n    console.log('');\n\n    (_console2 = console).log.apply(_console2, [groupPrefix + GROUP_ARROW].concat(args));\n\n    groupPrefix += GROUP_SHIFT;\n  }\n}\nfunction consoleGroupEnd() {\n  if (console.groupEnd) {\n    console.groupEnd();\n  } else {\n    groupPrefix = groupPrefix.substr(0, groupPrefix.length - GROUP_SHIFT.length);\n  }\n}\n\nfunction argToString(arg) {\n  return typeof arg === 'function' ? \"\" + arg.name : typeof arg === 'string' ? \"'\" + arg + \"'\" : arg;\n}\n\nfunction isPrimitive(val) {\n  return typeof val === 'string' || typeof val === 'number' || typeof val === 'boolean' || typeof val === 'symbol' || val === null || val === undefined;\n}\n\nvar Formatter =\n/*#__PURE__*/\nfunction () {\n  function Formatter() {\n    this.logs = [];\n    this.suffix = [];\n  }\n\n  var _proto = Formatter.prototype;\n\n  _proto.add = function add(msg) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    // Remove the `%c` CSS styling that is not supported by the Node console.\n    if (!IS_BROWSER && typeof msg === 'string') {\n      var prevMsg = msg;\n      msg = msg.replace(/^%c\\s*/, '');\n\n      if (msg !== prevMsg) {\n        // Remove the first argument which is the CSS style string.\n        args.shift();\n      }\n    }\n\n    this.logs.push({\n      msg: msg,\n      args: args\n    });\n    return this;\n  };\n\n  _proto.appendData = function appendData() {\n    var _this$suffix;\n\n    (_this$suffix = this.suffix).push.apply(_this$suffix, arguments);\n\n    return this;\n  };\n\n  _proto.addValue = function addValue(value) {\n    if (isPrimitive(value)) {\n      this.add(value);\n    } else {\n      // The browser console supports `%O`, the Node console does not.\n      if (IS_BROWSER) {\n        this.add('%O', value);\n      } else {\n        this.add('%s', require('util').inspect(value));\n      }\n    }\n\n    return this;\n  };\n\n  _proto.addCall = function addCall(name, args) {\n    var _this = this;\n\n    if (!args.length) {\n      this.add(name + \"()\");\n    } else {\n      this.add(name);\n      this.add('(');\n      args.forEach(function (arg, i) {\n        _this.addValue(argToString(arg));\n\n        _this.addValue(i === args.length - 1 ? ')' : ', ');\n      });\n    }\n\n    return this;\n  };\n\n  _proto.getLog = function getLog() {\n    var msgs = [];\n    var msgsArgs = [];\n\n    for (var _iterator = this.logs, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var _ref2 = _ref,\n          msg = _ref2.msg,\n          args = _ref2.args;\n      msgs.push(msg);\n      msgsArgs.push.apply(msgsArgs, args);\n    }\n\n    return [msgs.join('')].concat(msgsArgs, this.suffix);\n  };\n\n  return Formatter;\n}();\n\nvar DEFAULT_STYLE = 'color: black';\nvar LABEL_STYLE = 'font-weight: bold';\nvar EFFECT_TYPE_STYLE = 'color: blue';\nvar ERROR_STYLE = 'color: red';\nvar CANCEL_STYLE = 'color: #ccc';\n\nvar DescriptorFormatter =\n/*#__PURE__*/\nfunction (_Formatter) {\n  _inheritsLoose(DescriptorFormatter, _Formatter);\n\n  function DescriptorFormatter(isCancel, isError) {\n    var _this;\n\n    _this = _Formatter.call(this) || this;\n    _this.logMethod = isError ? 'error' : 'log';\n\n    _this.styleOverride = function (s) {\n      return isCancel ? CANCEL_STYLE : isError ? ERROR_STYLE : s;\n    };\n\n    return _this;\n  }\n\n  var _proto = DescriptorFormatter.prototype;\n\n  _proto.resetStyle = function resetStyle() {\n    return this.add('%c', this.styleOverride(DEFAULT_STYLE));\n  };\n\n  _proto.addLabel = function addLabel(text) {\n    if (text) {\n      return this.add(\"%c \" + text + \" \", this.styleOverride(LABEL_STYLE));\n    } else {\n      return this;\n    }\n  };\n\n  _proto.addEffectType = function addEffectType(text) {\n    return this.add(\"%c \" + text + \" \", this.styleOverride(EFFECT_TYPE_STYLE));\n  };\n\n  _proto.addDescResult = function addDescResult(descriptor, ignoreResult) {\n    var status = descriptor.status,\n        result = descriptor.result,\n        error = descriptor.error,\n        duration = descriptor.duration;\n\n    if (status === RESOLVED && !ignoreResult) {\n      if (array(result)) {\n        this.addValue(' ðŸ¡² ');\n        this.addValue(result);\n      } else {\n        this.appendData('ðŸ¡²', result);\n      }\n    } else if (status === REJECTED) {\n      this.appendData('ðŸ¡² âš ', error);\n    } else if (status === PENDING) {\n      this.appendData('âŒ›');\n    } else if (status === CANCELLED) {\n      this.appendData('ðŸ¡² Cancelled!');\n    }\n\n    if (status !== PENDING) {\n      this.appendData(\"(\" + duration.toFixed(2) + \"ms)\");\n    }\n\n    return this;\n  };\n\n  return DescriptorFormatter;\n}(Formatter);\n\n/* eslint-disable no-console */\nfunction logSaga(manager) {\n  if (manager.getRootIds().length === 0) {\n    console.log('Saga monitor: No effects to log');\n  }\n\n  console.log('');\n  console.log('Saga monitor:', Date.now(), new Date().toISOString());\n\n  for (var _iterator = manager.getRootIds(), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var id = _ref;\n    logEffectTree(manager, id);\n  }\n\n  console.log('');\n}\n\nfunction logEffectTree(manager, effectId) {\n  var desc = manager.get(effectId);\n  var childIds = manager.getChildIds(effectId);\n  var formatter = getFormatterFromDescriptor(desc);\n\n  if (childIds.length === 0) {\n    var _console;\n\n    (_console = console)[formatter.logMethod].apply(_console, formatter.getLog());\n  } else {\n    consoleGroup.apply(void 0, formatter.getLog());\n\n    for (var _iterator2 = childIds, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var id = _ref2;\n      logEffectTree(manager, id);\n    }\n\n    consoleGroupEnd();\n  }\n}\n\nfunction getFormatterFromDescriptor(desc) {\n  var isCancel = desc.status === CANCELLED;\n  var isError = desc.status === REJECTED;\n  var formatter = new DescriptorFormatter(isCancel, isError);\n  var winnerInd = desc.winner ? isError ? 'âœ˜' : 'âœ“' : '';\n  formatter.addLabel(winnerInd).addLabel(desc.label);\n\n  if (desc.root) {\n    formatter.addEffectType('root').resetStyle().addCall(desc.saga.name, desc.args).addDescResult(desc);\n  } else if (iterator(desc.effect)) {\n    formatter.addValue(desc.effect.name).addDescResult(desc, true);\n  } else if (promise(desc.effect)) {\n    formatter.addEffectType('promise').resetStyle().addDescResult(desc);\n  } else if (effect(desc.effect)) {\n    var _desc$effect = desc.effect,\n        type = _desc$effect.type,\n        payload = _desc$effect.payload;\n\n    if (type === effectTypes.TAKE) {\n      formatter.addEffectType('take').resetStyle().addValue(payload.channel == null ? payload.pattern : payload).addDescResult(desc);\n    } else if (type === effectTypes.PUT) {\n      formatter.addEffectType('put').resetStyle().addDescResult(Object.assign({}, desc, {\n        result: payload\n      }));\n    } else if (type === effectTypes.ALL) {\n      formatter.addEffectType('all').resetStyle().addDescResult(desc, true);\n    } else if (type === effectTypes.RACE) {\n      formatter.addEffectType('race').resetStyle().addDescResult(desc, true);\n    } else if (type === effectTypes.CALL) {\n      formatter.addEffectType('call').resetStyle().addCall(payload.fn.name, payload.args).addDescResult(desc);\n    } else if (type === effectTypes.CPS) {\n      formatter.addEffectType('cps').resetStyle().addCall(payload.fn.name, payload.args).addDescResult(desc);\n    } else if (type === effectTypes.FORK) {\n      formatter.addEffectType(payload.detached ? 'spawn' : 'fork').resetStyle().addCall(payload.fn.name, payload.args).addDescResult(desc);\n    } else if (type === effectTypes.JOIN) {\n      formatter.addEffectType('join').resetStyle().addDescResult(desc);\n    } else if (type === effectTypes.CANCEL) {\n      formatter.addEffectType('cancel').resetStyle().appendData(payload.name);\n    } else if (type === effectTypes.SELECT) {\n      formatter.addEffectType('select').resetStyle().addCall(payload.selector.name, payload.args).addDescResult(desc);\n    } else if (type === effectTypes.ACTION_CHANNEL) {\n      formatter.addEffectType('actionChannel').resetStyle().addValue(payload.buffer == null ? payload.pattern : payload).addDescResult(desc);\n    } else if (type === effectTypes.CANCELLED) {\n      formatter.addEffectType('cancelled').resetStyle().addDescResult(desc);\n    } else if (type === effectTypes.FLUSH) {\n      formatter.addEffectType('flush').resetStyle().addValue(payload).addDescResult(desc);\n    } else if (type === effectTypes.GET_CONTEXT) {\n      formatter.addEffectType('getContext').resetStyle().addValue(payload).addDescResult(desc);\n    } else if (type === effectTypes.SET_CONTEXT) {\n      formatter.addEffectType('setContext').resetStyle().addValue(payload).addDescResult(desc, true);\n    } else {\n      throw new Error(\"Invalid effect type \" + type);\n    }\n  } else {\n    formatter.addEffectType('unknown').resetStyle().addDescResult(desc);\n  }\n\n  return formatter;\n}\n\n/** The manager is used for bookkeeping all the effect descriptors */\nvar Manager =\n/*#__PURE__*/\nfunction () {\n  function Manager() {\n    this.rootIds = []; // effect-id-to-effect-descriptor\n\n    this.map = {}; // effect-id-to-array-of-child-id\n\n    this.childIdsMap = {};\n  }\n\n  var _proto = Manager.prototype;\n\n  _proto.get = function get(effectId) {\n    return this.map[effectId];\n  };\n\n  _proto.set = function set(effectId, desc) {\n    this.map[effectId] = desc;\n\n    if (this.childIdsMap[desc.parentEffectId] == null) {\n      this.childIdsMap[desc.parentEffectId] = [];\n    }\n\n    this.childIdsMap[desc.parentEffectId].push(effectId);\n  };\n\n  _proto.setRootEffect = function setRootEffect(effectId, desc) {\n    this.rootIds.push(effectId);\n    this.set(effectId, Object.assign({\n      root: true\n    }, desc));\n  };\n\n  _proto.getRootIds = function getRootIds() {\n    return this.rootIds;\n  };\n\n  _proto.getChildIds = function getChildIds(parentEffectId) {\n    return this.childIdsMap[parentEffectId] || [];\n  };\n\n  return Manager;\n}();\n\n/* eslint-disable no-console */\nvar globalScope = IS_REACT_NATIVE ? global : IS_BROWSER ? window : null; // `VERBOSE` can be made a setting configured from the outside.\n\nfunction time() {\n  if (typeof performance !== 'undefined' && performance.now) {\n    return performance.now();\n  } else {\n    return Date.now();\n  }\n}\n\nvar manager =\n/*#__PURE__*/\nnew Manager();\n\nfunction rootSagaStarted(desc) {\n\n  manager.setRootEffect(desc.effectId, Object.assign({}, desc, {\n    status: PENDING,\n    start: time()\n  }));\n}\n\nfunction effectTriggered(desc) {\n\n  manager.set(desc.effectId, Object.assign({}, desc, {\n    status: PENDING,\n    start: time()\n  }));\n}\n\nfunction effectResolved(effectId, result) {\n\n  resolveEffect(effectId, result);\n}\n\nfunction effectRejected(effectId, error) {\n\n  rejectEffect(effectId, error);\n}\n\nfunction effectCancelled(effectId) {\n\n  cancelEffect(effectId);\n}\n\nfunction computeEffectDur(effect) {\n  var now = time();\n  Object.assign(effect, {\n    end: now,\n    duration: now - effect.start\n  });\n}\n\nfunction resolveEffect(effectId, result) {\n  var effect = manager.get(effectId);\n\n  if (task(result)) {\n    result.toPromise().then(function (taskResult) {\n      if (result.isCancelled()) {\n        cancelEffect(effectId);\n      } else {\n        resolveEffect(effectId, taskResult);\n      }\n    }, function (taskError) {\n      return rejectEffect(effectId, taskError);\n    });\n  } else {\n    computeEffectDur(effect);\n    effect.status = RESOLVED;\n    effect.result = result;\n\n    if (isRaceEffect(effect.effect)) {\n      setRaceWinner(effectId, result);\n    }\n  }\n}\n\nfunction rejectEffect(effectId, error) {\n  var effect = manager.get(effectId);\n  computeEffectDur(effect);\n  effect.status = REJECTED;\n  effect.error = error;\n\n  if (isRaceEffect(effect.effect)) {\n    setRaceWinner(effectId, error);\n  }\n}\n\nfunction cancelEffect(effectId) {\n  var effect = manager.get(effectId);\n  computeEffectDur(effect);\n  effect.status = CANCELLED;\n}\n\nfunction setRaceWinner(raceEffectId, result) {\n  var winnerLabel = Object.keys(result)[0];\n\n  for (var _iterator = manager.getChildIds(raceEffectId), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var childId = _ref;\n    var childEffect = manager.get(childId);\n\n    if (childEffect.label === winnerLabel) {\n      childEffect.winner = true;\n    }\n  }\n} // Export the snapshot-logging function to run from the browser console or extensions.\n\n\nif (globalScope) {\n  console.log('Enter `$$LogSagas()` to print the monitor log');\n\n  globalScope.$$LogSagas = function () {\n    return logSaga(manager);\n  };\n} // Export the snapshot-logging function for arbitrary use by external code.\n\nvar index = {\n  rootSagaStarted: rootSagaStarted,\n  effectTriggered: effectTriggered,\n  effectResolved: effectResolved,\n  effectRejected: effectRejected,\n  effectCancelled: effectCancelled,\n  actionDispatched: function actionDispatched() {}\n};\n\nexport default index;\nexport { logSaga };\n"]},"metadata":{},"sourceType":"module"}